(name 'Voyage-Tugrik-Server-Core-dkh.11' message 'move the object creation methods to the instance side of TugrikDbCollection and VoyageClassMappingDbCollection' id '25946b5c-a1f5-469b-b55f-b27ce1eb199c' date '08/07/2016' time '14:14:16' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.10' message 'materialize object using Magritte on server-side to produce an instance of the proper class... when serializing a wrapped object we need to add back in the instanceOf, _id, etc. meta data so that client can materialize correctly ... need to use magritte to produce the serialized json dictionary, since we want to be able to handle root object references ....' id 'a699db13-b1d4-4a01-b7fb-a13aebb1bfaf' date '08/06/2016' time '14:29:16' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.9' message 'expand VOTugrikClassMappingTest>>testServerBlock a little bit; add _wrapper dynamicInstVar to voyage root instances, so that we can arrange to include oid when shipping to client' id '73312bf1-02c3-4b43-af2d-a3d16f59c0d5' date '08/05/2016' time '20:02:34' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.8' message 'Insert the VoyageWrapperObject for handling class mapping ... expect server blocks to fail ... but might be promising otherwise and if I can arrange for the wrapper to only be visible directly in the top-level collection and repository queries unwrap it will probably be accepable ... the wrappers can truly be made immutable once they''ve been created (modulo migration concerns)' id '58c91f57-7724-4d7b-be54-97e124a52083' date '08/05/2016' time '17:25:22' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.7' message 'add VoyageWrapper object and get VOTugrikClassMappingTest>>testServerSideMaterializationSerialization to pass ...' id '996f99f0-6bba-4684-b6fb-0456e58bc7bf' date '08/05/2016' time '17:00:44' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.6' message 'baby steps for full-fledged class mapping support --- client-side test' id '39349fee-d2e8-4128-9c6e-1984d7593862' date '08/05/2016' time '16:09:42' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.5' message 'starting to explore Magritte-based materialization/serialization on server ... start with incoming and outgoing objects for server blocks to keep it simple and isolated' id 'e70c588e-0d9d-4126-8de7-56454c5b4937' date '08/05/2016' time '15:33:12' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.4' message 'implement FastUUIDGenerator>>makeSeed and UUIDGenerator>>makeSeed' id '2580b494-625c-4e4c-bb5f-d34a89c09219' date '08/05/2016' time '14:23:59' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.3' message 'Tugrik server will have it''s own version seed generator; add Voyage-Tugrik-Server-Tests package; VORepository class>>defaultVersionGenerator is a good idea ... unqlite uses this and I want to use this (on the server); tugrik client needs its own serializer tests' id 'd55b8006-fa83-4a9a-ae0f-f6bbf9dc2a33' date '08/05/2016' time '12:08:00' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.2' message 'extension methods being supplied by Voyage-Model-Core package as of now ' id 'd0c0b15a-8c57-4cf3-a015-8e9c58dff374' date '08/05/2016' time '11:24:46' author 'dkh' ancestors ((name 'Voyage-Tugrik-Server-Core-dkh.1' message 'rename server-side classes and packages to Tuygrik' id '38b565e4-6fc2-4a75-adf4-45962314f769' date '08/04/2016' time '16:11:16' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())